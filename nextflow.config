profiles {
    standard {
        docker.enabled=true
        process {
            withName:nanoplot {
                cpus=10
            }
            withName:multiqc {
                cpus=2
            }
        }
        params {
            out_dir="${launchDir}"
            in_dir=null
            csv = null
            threads = 20
            skip_basecall = true
            bam = null
            bed = null
            sample_id = ""
            help=false
            publish=true
        }
    }
    test {
        docker.enabled=true
        process {
            withName:nanoplot {
                cpus=2
                container="nanozoo/nanoplot:1.42.0--547049c"
            }
            withName:multiqc {
                cpus=2
                container="staphb/multiqc:latest"
            }
        }
        params {
            out_dir="${launchDir}"
            in_dir=null
            csv = null
            skip_basecall = true
            threads = 4
            help=false
            bam = null
            bed = null
            sample_id = ""
            publish=false
        }
    }
    drac {
        process {
            executor = 'slurm'
            withLabel:cat {
                clusterOptions = "--cpus-per-task=2 --mem 2G --time=2:00:00"
            }
            withName:nanoplot {
                clusterOptions = "--cpus-per-task=10 --mem 10G --time=4:00:00"
            }
            withName:multiqc {
                clusterOptions = "--cpus-per-task=2 --mem 1G --time=1:00:00"
            }
            withLabel:sam_mid {
                clusterOptions = "--cpus-per-task=10 --mem 5G --time=3:00:00"
            }
            withLabel:sam_big {
                clusterOptions = "--cpus-per-task=20 --mem 5G --time=3:00:00"
            }
            withName:mosdepth {
                clusterOptions = "--cpus-per-task=10 --mem 20G --time=3:00:00"
            }
        }
        params {
            out_dir="${launchDir}"
            in_dir=null
            skip_basecall = true
            csv = null
            bam = null
            bed = null
            sample_id = ""
            threads = 20
            help=false
            publish=true
        }
        apptainer {
            enabled=true
            autoMounts=true
            libraryDir = "/project/ctb-noncodo/Platform/references/apptainer/images"
            cacheDir = "/project/ctb-noncodo/Platform/references/apptainer/cache"
        }
        executor {
            pollInterval = '60 sec'
            submitRateLimit = '60/1min'
            queueSize = 100 
        }
    }
    test_drac {
        process {
            executor = 'slurm'
            withLabel:cat {
                clusterOptions = "--cpus-per-task=2 --mem 2G --time=2:00:00"
            }
            withName:nanoplot {
                clusterOptions = "--cpus-per-task=10 --mem 10G --time=4:00:00"
            }
            withName:multiqc {
                clusterOptions = "--cpus-per-task=2 --mem 1G --time=1:00:00"
            }
            withLabel:sam_mid {
                clusterOptions = "--cpus-per-task=10 --mem 5G --time=3:00:00"
            }
            withLabel:sam_big {
                clusterOptions = "--cpus-per-task=20 --mem 5G --time=3:00:00"
            }
            withName:mosdepth {
                clusterOptions = "--cpus-per-task=10 --mem 20G --time=3:00:00"
            }
        }
        params {
            out_dir="${launchDir}"
            in_dir=null
            csv = null
            bam = null
            bed = null
            sample_id = ""
            threads = 4
            skip_basecall = true
            help=false
            publish=true
        }
        apptainer {
            enabled=true
            autoMounts=true
            libraryDir = "/project/ctb-noncodo/Platform/references/apptainer/images"
            cacheDir = "/project/ctb-noncodo/Platform/references/apptainer/cache"
        }
        executor {
            pollInterval = '60 sec'
            submitRateLimit = '60/1min'
            queueSize = 100 
        }
    }
}
